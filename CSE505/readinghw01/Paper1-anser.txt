The paper discussed two ways that people may reason about programs and computation in the future: 1) treating them as biological systems and deal with faults in the systems through homeopathy, or 2) treating them as mathematical objects and reason about their correctness logically. The paper starts from the fact that short programs 20 years ago were logically reasoned. However, as programs grew into complicated systems, people gave up reasoning them logically and started treating them through 'superstition' as we did for biology systems or astronomy. Though people around the world tend to use imprecise metaphors to describe objects, we should not continue treating programs as bio systems because we cannot depend on such programs that we don't understand thoroughly. Oppositely, we should make our system simpler and starting educating students to think logically about their programs to make it possible to logically reason about programs in practice.

The paper is valued from the following several aspects: 1) Point out the fact that modern programs are not logically reasoned and are there exists unclear design purposes in these systems which make the system even harder to be correctly reasoned. 2) Provide reasons why people cannot clearly and precisely design their systems. (People tend to describe new systems through metaphors). 3) The problems of treating these programs as we do now treating them as biological systems, and benefits from treating them as mathematical objects (Biosystems evolves very slow and we can't depend on things we don't understand). 4) How can we make our programs easier to logically reason about and what should we do now. (Make them simpler and educating students to think formally on their programs)

Problems of the paper: 1) Comparing programs with automobiles does not contribute much to the main idea of the paper while taking too much space in the paper. (Though this comparison make it clear that programs should be treated as mathematical objects, it takes too much space and the row 'automobile' played in the metaphor is not very consistent, making it difficult to understand). 2) The paper emphasize that we are designing systems with too much meanings thus we should make them simpler to be reason about. However this does not totally make sense to me. On the one hand, multiple meanings of a certain action is important for people to have an intuitive about the functionality, and the key point is that whether the semantic meaning of these actions are clear enough to be reason about. On the other hand, making them too simple may make them less expressive, what we should do it to make them modularly so that we can separately reason about them logically. That is to say, we should be clear about the two concepts: system simplicity and verification simplicity.